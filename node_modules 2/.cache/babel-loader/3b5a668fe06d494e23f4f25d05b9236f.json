{"ast":null,"code":"import _slicedToArray from \"/Users/hansolbin/Documents/GitHub/singlish-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/hansolbin/Documents/GitHub/singlish-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { useCallback, useMemo } from \"react\";\nimport useQueryParams from \"./useQueryParams\";\nvar useQueryParam = function useQueryParam(name, paramConfig, options) {\n  var paramConfigMap = useMemo(function () {\n    return _defineProperty({}, name, paramConfig != null ? paramConfig : \"inherit\");\n  }, [name, paramConfig]);\n  var _useQueryParams = useQueryParams(paramConfigMap, options),\n    _useQueryParams2 = _slicedToArray(_useQueryParams, 2),\n    query = _useQueryParams2[0],\n    setQuery = _useQueryParams2[1];\n  var decodedValue = query[name];\n  var setValue = useCallback(function (newValue, updateType) {\n    if (typeof newValue === \"function\") {\n      return setQuery(function (latestValues) {\n        var newValueFromLatest = newValue(latestValues[name]);\n        return _defineProperty({}, name, newValueFromLatest);\n      }, updateType);\n    }\n    return setQuery(_defineProperty({}, name, newValue), updateType);\n  }, [name, setQuery]);\n  return [decodedValue, setValue];\n};\nexport { useQueryParam };","map":null,"metadata":{},"sourceType":"module"}