{"ast":null,"code":"import shallowEqual from \"./shallowEqual\";\nfunction getLatestDecodedValues(parsedParams, paramConfigMap, decodedParamCache) {\n  var decodedValues = {};\n  var paramNames = Object.keys(paramConfigMap);\n  for (var _i = 0, _paramNames = paramNames; _i < _paramNames.length; _i++) {\n    var paramName = _paramNames[_i];\n    var paramConfig = paramConfigMap[paramName];\n    var encodedValue = parsedParams[paramName];\n    var decodedValue = void 0;\n    if (decodedParamCache.has(paramName, encodedValue, paramConfig.decode)) {\n      decodedValue = decodedParamCache.get(paramName);\n    } else {\n      decodedValue = paramConfig.decode(encodedValue);\n      if (paramConfig.equals && decodedParamCache.has(paramName, encodedValue)) {\n        var oldDecodedValue = decodedParamCache.get(paramName);\n        if (paramConfig.equals(decodedValue, oldDecodedValue)) {\n          decodedValue = oldDecodedValue;\n        }\n      }\n      if (decodedValue !== void 0) {\n        decodedParamCache.set(paramName, encodedValue, decodedValue, paramConfig.decode);\n      }\n    }\n    if (decodedValue === void 0 && paramConfig.default !== void 0) {\n      decodedValue = paramConfig.default;\n    }\n    decodedValues[paramName] = decodedValue;\n  }\n  return decodedValues;\n}\nfunction makeStableGetLatestDecodedValues() {\n  var prevDecodedValues;\n  function stableGetLatest(parsedParams, paramConfigMap, decodedParamCache) {\n    var decodedValues = getLatestDecodedValues(parsedParams, paramConfigMap, decodedParamCache);\n    if (prevDecodedValues != null && shallowEqual(prevDecodedValues, decodedValues)) {\n      return prevDecodedValues;\n    }\n    prevDecodedValues = decodedValues;\n    return decodedValues;\n  }\n  return stableGetLatest;\n}\nexport { getLatestDecodedValues, makeStableGetLatestDecodedValues };","map":null,"metadata":{},"sourceType":"module"}